// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Generates sewing pattern suggestions based on customer garment descriptions.
 *
 * - generatePatternSuggestions - A function that generates pattern suggestions for a tailor based on customer input.
 * - PatternSuggestionInput - The input type for the generatePatternSuggestions function.
 * - PatternSuggestionOutput - The return type for the generatePatternSuggestions function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PatternSuggestionInputSchema = z.object({
  garmentDescription: z
    .string()
    .describe('A detailed description of the desired garment.'),
});
export type PatternSuggestionInput = z.infer<typeof PatternSuggestionInputSchema>;

const PatternSuggestionOutputSchema = z.object({
  patternSuggestions: z
    .array(z.string())
    .describe('A list of suggested sewing patterns based on the garment description.'),
});
export type PatternSuggestionOutput = z.infer<typeof PatternSuggestionOutputSchema>;

export async function generatePatternSuggestions(
  input: PatternSuggestionInput
): Promise<PatternSuggestionOutput> {
  return patternSuggestionFlow(input);
}

const prompt = ai.definePrompt({
  name: 'patternSuggestionPrompt',
  input: {schema: PatternSuggestionInputSchema},
  output: {schema: PatternSuggestionOutputSchema},
  prompt: `You are a pattern suggestion AI specializing in suggesting sewing patterns based on customer descriptions.

  Based on the following garment description, suggest several sewing patterns that would be appropriate.

  Description: {{{garmentDescription}}}

  Return a list of pattern suggestions.
  `,
});

const patternSuggestionFlow = ai.defineFlow(
  {
    name: 'patternSuggestionFlow',
    inputSchema: PatternSuggestionInputSchema,
    outputSchema: PatternSuggestionOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
